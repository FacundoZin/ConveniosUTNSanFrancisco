// <auto-generated />
using System;
using APIconvenios.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIconvenios.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250812193741_MigrationTestSqlServer")]
    partial class MigrationTestSqlServer
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("APIconvenios.Models.ConvenioEspecifico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComentarioOpcional")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ConvenioMarcoId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaFinConvenio")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaFirmaConvenio")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaInicioActividades")
                        .HasColumnType("date");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroconvenio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioMarcoId");

                    b.ToTable("ConveniosEspecificos");
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioMarco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ComentarioOpcional")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<DateOnly>("FechaFin")
                        .HasColumnType("date");

                    b.Property<DateOnly>("FechaFirmaConvenio")
                        .HasColumnType("date");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("numeroconvenio")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("ConveniosMarcos");
                });

            modelBuilder.Entity("APIconvenios.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<long>("Cuit")
                        .HasColumnType("bigint");

                    b.Property<string>("Direccion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("RazonSocial")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("APIconvenios.Models.Involucrados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Legajo")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolInvolucrado")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Involucrados");
                });

            modelBuilder.Entity("ConvenioEspecificoInvolucrados", b =>
                {
                    b.Property<int>("ConveniosEspecificosId")
                        .HasColumnType("int");

                    b.Property<int>("InvolucradosId")
                        .HasColumnType("int");

                    b.HasKey("ConveniosEspecificosId", "InvolucradosId");

                    b.HasIndex("InvolucradosId");

                    b.ToTable("ConvenioEspecificoInvolucrados");
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioEspecifico", b =>
                {
                    b.HasOne("APIconvenios.Models.ConvenioMarco", "ConvenioMarco")
                        .WithMany("ConveniosEspecificos")
                        .HasForeignKey("ConvenioMarcoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ConvenioMarco");
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioMarco", b =>
                {
                    b.HasOne("APIconvenios.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("ConvenioEspecificoInvolucrados", b =>
                {
                    b.HasOne("APIconvenios.Models.ConvenioEspecifico", null)
                        .WithMany()
                        .HasForeignKey("ConveniosEspecificosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIconvenios.Models.Involucrados", null)
                        .WithMany()
                        .HasForeignKey("InvolucradosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioMarco", b =>
                {
                    b.Navigation("ConveniosEspecificos");
                });
#pragma warning restore 612, 618
        }
    }
}
