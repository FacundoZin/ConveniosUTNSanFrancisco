// <auto-generated />
using System;
using APIconvenios.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace APIconvenios.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20251001132427_refactoredschema")]
    partial class refactoredschema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.6");

            modelBuilder.Entity("APIconvenios.Models.ArchivosAdjuntos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConvenioEspecificoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("ConvenioMarcoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("NombreArchivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RutaArchivo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioEspecificoId");

                    b.HasIndex("ConvenioMarcoId");

                    b.ToTable("ArchivosAdjuntos");
                });

            modelBuilder.Entity("APIconvenios.Models.Carreras", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Carreras");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Nombre = "Ingeniería Química"
                        },
                        new
                        {
                            Id = 2,
                            Nombre = "Ingeniería en Sistemas"
                        },
                        new
                        {
                            Id = 3,
                            Nombre = "Ingeniería Electrónica"
                        },
                        new
                        {
                            Id = 4,
                            Nombre = "Ingeniería Electromecánica"
                        },
                        new
                        {
                            Id = 5,
                            Nombre = "Tecnicatura en Programación"
                        });
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioEspecifico", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComentarioOpcional")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ConvenioMarcoId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("EsActa")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("FechaFinConvenio")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("FechaFirmaConvenio")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("FechaInicioActividades")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroResolucion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Refrendado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TituloConvenio")
                        .HasColumnType("TEXT");

                    b.Property<string>("numeroconvenio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("ConvenioMarcoId");

                    b.HasIndex("EmpresaId");

                    b.ToTable("ConveniosEspecificos");
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioMarco", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ComentarioOpcional")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EmpresaId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Estado")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly?>("FechaFin")
                        .HasColumnType("TEXT");

                    b.Property<DateOnly?>("FechaFirmaConvenio")
                        .HasColumnType("TEXT");

                    b.Property<string>("NumeroResolucion")
                        .HasColumnType("TEXT");

                    b.Property<bool>("Refrendado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Titulo")
                        .HasColumnType("TEXT");

                    b.Property<string>("numeroconvenio")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EmpresaId");

                    b.ToTable("ConveniosMarcos");
                });

            modelBuilder.Entity("APIconvenios.Models.Empresa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Cuit")
                        .HasColumnType("TEXT");

                    b.Property<string>("Direccion")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("RazonSocial")
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Empresas");
                });

            modelBuilder.Entity("APIconvenios.Models.Involucrados", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Legajo")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("RolInvolucrado")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Telefono")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Involucrados");
                });

            modelBuilder.Entity("CarrerasConvenioEspecifico", b =>
                {
                    b.Property<int>("CarrerasInvolucradasId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConveniosInvolucradosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("CarrerasInvolucradasId", "ConveniosInvolucradosId");

                    b.HasIndex("ConveniosInvolucradosId");

                    b.ToTable("CarrerasConvenioEspecifico");
                });

            modelBuilder.Entity("ConvenioEspecificoInvolucrados", b =>
                {
                    b.Property<int>("ConveniosEspecificosId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("InvolucradosId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ConveniosEspecificosId", "InvolucradosId");

                    b.HasIndex("InvolucradosId");

                    b.ToTable("ConvenioEspecificoInvolucrados");
                });

            modelBuilder.Entity("APIconvenios.Models.ArchivosAdjuntos", b =>
                {
                    b.HasOne("APIconvenios.Models.ConvenioEspecifico", null)
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("ConvenioEspecificoId");

                    b.HasOne("APIconvenios.Models.ConvenioMarco", null)
                        .WithMany("ArchivosAdjuntos")
                        .HasForeignKey("ConvenioMarcoId");
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioEspecifico", b =>
                {
                    b.HasOne("APIconvenios.Models.ConvenioMarco", "ConvenioMarco")
                        .WithMany("ConveniosEspecificos")
                        .HasForeignKey("ConvenioMarcoId");

                    b.HasOne("APIconvenios.Models.Empresa", "empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("ConvenioMarco");

                    b.Navigation("empresa");
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioMarco", b =>
                {
                    b.HasOne("APIconvenios.Models.Empresa", "Empresa")
                        .WithMany()
                        .HasForeignKey("EmpresaId");

                    b.Navigation("Empresa");
                });

            modelBuilder.Entity("CarrerasConvenioEspecifico", b =>
                {
                    b.HasOne("APIconvenios.Models.Carreras", null)
                        .WithMany()
                        .HasForeignKey("CarrerasInvolucradasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIconvenios.Models.ConvenioEspecifico", null)
                        .WithMany()
                        .HasForeignKey("ConveniosInvolucradosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ConvenioEspecificoInvolucrados", b =>
                {
                    b.HasOne("APIconvenios.Models.ConvenioEspecifico", null)
                        .WithMany()
                        .HasForeignKey("ConveniosEspecificosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("APIconvenios.Models.Involucrados", null)
                        .WithMany()
                        .HasForeignKey("InvolucradosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioEspecifico", b =>
                {
                    b.Navigation("ArchivosAdjuntos");
                });

            modelBuilder.Entity("APIconvenios.Models.ConvenioMarco", b =>
                {
                    b.Navigation("ArchivosAdjuntos");

                    b.Navigation("ConveniosEspecificos");
                });
#pragma warning restore 612, 618
        }
    }
}
